// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication11.Models;

#nullable disable

namespace WebApplication11.Migrations
{
    [DbContext(typeof(DATABASECONTEXTT))]
    partial class DATABASECONTEXTTModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication11.Models.ACCESS_POINT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("DESCRPTION")
                        .HasMaxLength(6000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Warehouse")
                        .HasColumnType("bit");

                    b.Property<string>("LOCATION")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERIAL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("TYPE")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("ACCESS_POINTS");
                });

            modelBuilder.Entity("WebApplication11.Models.BRANCH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ADDRESS")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DESCRPTION")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("OPEN_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("PHONE")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.ToTable("BRANCHES");
                });

            modelBuilder.Entity("WebApplication11.Models.DEPARTMENT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PHONE")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ID");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.ToTable("DEPARTMENTS");
                });

            modelBuilder.Entity("WebApplication11.Models.DEVICES", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BIOS_VERSION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BUS_SPEED")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EMPLOYEE_ID")
                        .HasColumnType("int");

                    b.Property<string>("HDD")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Is_Warehouse")
                        .HasColumnType("bit");

                    b.Property<string>("MODEL_NO")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MOINTOR_BRANCH_INCH")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PROCESSOR")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QUANTITY")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RAME_SIZE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RAM_GENERATION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RECIVED_DEVICE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RE_RECIVED_DEVICE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDD_NVME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERIAL_NO")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TYPE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.Property<string>("WINDOWS")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("EMPLOYEE_ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SERIAL_NO")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("DEVICESES");
                });

            modelBuilder.Entity("WebApplication11.Models.EMPLOYEE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ADDRESS")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DEPARTMENT_ID")
                        .HasColumnType("int");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ENDDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PHONE")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("STARTEDATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("DEPARTMENT_ID");

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("WebApplication11.Models.HANDHELD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ANDROID_VERSION")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("EMPLOYEE_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Is_warehouse")
                        .HasColumnType("bit");

                    b.Property<string>("MODEL")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("RAM_SIZE")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<DateTime?>("RECIVED_DEVICE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RE_RECIVED_DEVICE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("SERIAL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("EMPLOYEE_ID");

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("HANDHELDs");
                });

            modelBuilder.Entity("WebApplication11.Models.KVM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Warehouse")
                        .HasColumnType("bit");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERIAL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TYPE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("KVMS");
                });

            modelBuilder.Entity("WebApplication11.Models.PARCODE_MACHINE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Is_Warehouse")
                        .HasColumnType("bit");

                    b.Property<string>("MODEL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("SERIAL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TYPE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("PARCODE_MACHINES");
                });

            modelBuilder.Entity("WebApplication11.Models.PRINTER", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DEPARTMENT_ID")
                        .HasColumnType("int");

                    b.Property<string>("DESCRPTION")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Warehouse")
                        .HasColumnType("bit");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERIAL_NUMBER")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TYPE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("DEPARTMENT_ID");

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique()
                        .HasFilter("[SERIAL_NUMBER] IS NOT NULL");

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("PRINTERS");
                });

            modelBuilder.Entity("WebApplication11.Models.PROJECTOR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IS_Warehouse")
                        .HasColumnType("bit");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERIAL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TYPE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("PROJECTORS");
                });

            modelBuilder.Entity("WebApplication11.Models.RACK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DESCRPTION")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCATION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.Property<bool>("is_warehouse")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("RACKS");
                });

            modelBuilder.Entity("WebApplication11.Models.ROUTER", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IP_ADDRESS")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LOCATION")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAC_ADDRESS")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NUMBER_OF_PORTS")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERIAL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERVICES")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.Property<bool>("is_warehouse")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("ROUTERS");
                });

            modelBuilder.Entity("WebApplication11.Models.SURVIEILLANCE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CONECTIVETY_TYPE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DVR_NVR_MODEL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Externail_IP")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Internail_Ip")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NUMBER_OF_CHANNEL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Port_number")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("STORAGE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Serial_Number")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("USED_CHANNEL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("USER_LOGIN")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VERIFICATION_CODE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_FOR_CAMRA_DVR_ID")
                        .HasColumnType("int");

                    b.Property<bool>("is_warehouse")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Serial_Number")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_FOR_CAMRA_DVR_ID");

                    b.ToTable("SURVIEILLANCES");
                });

            modelBuilder.Entity("WebApplication11.Models.SWITCH", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ADDTIONAL_PORTS")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IP_ADDRESS")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LOCATION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NUMBER_OF_PORTS")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERIAL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TYPE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.Property<bool>("is_warehouse")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("SWITCHS");
                });

            modelBuilder.Entity("WebApplication11.Models.UPS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CAPASTY")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LOCATION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SERIAL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TYPE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("WAREHOUSE_STOCK_ID")
                        .HasColumnType("int");

                    b.Property<bool>("is_warehouse")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.HasIndex("SERIAL_NUMBER")
                        .IsUnique();

                    b.HasIndex("WAREHOUSE_STOCK_ID");

                    b.ToTable("UPSES");
                });

            modelBuilder.Entity("WebApplication11.Models.USERES", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USERNAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("USERES");
                });

            modelBuilder.Entity("WebApplication11.Models.WAREHOUSE_STOCK", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.ToTable("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.WAREHOUSE_STOCK_FOR_CAMRA_DVR", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("BRANCH_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NOTE")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TYPE")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("BRANCH_ID");

                    b.HasIndex("CODE")
                        .IsUnique();

                    b.ToTable("WAREHOUSE_STOCK_FOR_CAMRA_DVRS");
                });

            modelBuilder.Entity("WebApplication11.Models.ACCESS_POINT", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("ACCESS_POINTs")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("ACCESS_POINT")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.DEPARTMENT", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany()
                        .HasForeignKey("BRANCH_ID");

                    b.Navigation("BRANCH");
                });

            modelBuilder.Entity("WebApplication11.Models.DEVICES", b =>
                {
                    b.HasOne("WebApplication11.Models.EMPLOYEE", "EMPLOYEE")
                        .WithMany("DEVICESES")
                        .HasForeignKey("EMPLOYEE_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("DEVICEs")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("EMPLOYEE");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.EMPLOYEE", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("Employees")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.DEPARTMENT", "DEPARTMENT")
                        .WithMany()
                        .HasForeignKey("DEPARTMENT_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("DEPARTMENT");
                });

            modelBuilder.Entity("WebApplication11.Models.HANDHELD", b =>
                {
                    b.HasOne("WebApplication11.Models.EMPLOYEE", "EMPLOYEE")
                        .WithMany("handHelds")
                        .HasForeignKey("EMPLOYEE_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("handHelds")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("EMPLOYEE");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.KVM", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("KVMS")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("KVMS")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.PARCODE_MACHINE", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("PARCODE_MACHINEs")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("PARCODE_MACHINEs")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.PRINTER", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("PRINTERs")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.DEPARTMENT", "DEPARTMENT")
                        .WithMany()
                        .HasForeignKey("DEPARTMENT_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("PRINTERs")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("DEPARTMENT");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.PROJECTOR", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("PROJECTORs")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("PROJECTORs")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.RACK", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("RACKs")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("RACKs")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.ROUTER", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("ROUTERs")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("ROUTERs")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.SURVIEILLANCE", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("SURVIEILLANCEs")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK_FOR_CAMRA_DVR", "WAREHOUSE_STOCK_FOR_CAMRA_DVR")
                        .WithMany("SURVIEILLANCEs")
                        .HasForeignKey("WAREHOUSE_STOCK_FOR_CAMRA_DVR_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK_FOR_CAMRA_DVR");
                });

            modelBuilder.Entity("WebApplication11.Models.SWITCH", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("SWITCHes")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("SWITCHs")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.UPS", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("UPs")
                        .HasForeignKey("BRANCH_ID");

                    b.HasOne("WebApplication11.Models.WAREHOUSE_STOCK", "WAREHOUSE_STOCK")
                        .WithMany("UPSS")
                        .HasForeignKey("WAREHOUSE_STOCK_ID");

                    b.Navigation("BRANCH");

                    b.Navigation("WAREHOUSE_STOCK");
                });

            modelBuilder.Entity("WebApplication11.Models.WAREHOUSE_STOCK", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("WAREHOUSE_STOCK")
                        .HasForeignKey("BRANCH_ID");

                    b.Navigation("BRANCH");
                });

            modelBuilder.Entity("WebApplication11.Models.WAREHOUSE_STOCK_FOR_CAMRA_DVR", b =>
                {
                    b.HasOne("WebApplication11.Models.BRANCH", "BRANCH")
                        .WithMany("WAREHOUSE_STOCK_FOR_CAMRA_DVRs")
                        .HasForeignKey("BRANCH_ID");

                    b.Navigation("BRANCH");
                });

            modelBuilder.Entity("WebApplication11.Models.BRANCH", b =>
                {
                    b.Navigation("ACCESS_POINTs");

                    b.Navigation("Employees");

                    b.Navigation("KVMS");

                    b.Navigation("PARCODE_MACHINEs");

                    b.Navigation("PRINTERs");

                    b.Navigation("PROJECTORs");

                    b.Navigation("RACKs");

                    b.Navigation("ROUTERs");

                    b.Navigation("SURVIEILLANCEs");

                    b.Navigation("SWITCHes");

                    b.Navigation("UPs");

                    b.Navigation("WAREHOUSE_STOCK");

                    b.Navigation("WAREHOUSE_STOCK_FOR_CAMRA_DVRs");
                });

            modelBuilder.Entity("WebApplication11.Models.EMPLOYEE", b =>
                {
                    b.Navigation("DEVICESES");

                    b.Navigation("handHelds");
                });

            modelBuilder.Entity("WebApplication11.Models.WAREHOUSE_STOCK", b =>
                {
                    b.Navigation("ACCESS_POINT");

                    b.Navigation("DEVICEs");

                    b.Navigation("KVMS");

                    b.Navigation("PARCODE_MACHINEs");

                    b.Navigation("PRINTERs");

                    b.Navigation("PROJECTORs");

                    b.Navigation("RACKs");

                    b.Navigation("ROUTERs");

                    b.Navigation("SWITCHs");

                    b.Navigation("UPSS");

                    b.Navigation("handHelds");
                });

            modelBuilder.Entity("WebApplication11.Models.WAREHOUSE_STOCK_FOR_CAMRA_DVR", b =>
                {
                    b.Navigation("SURVIEILLANCEs");
                });
#pragma warning restore 612, 618
        }
    }
}
